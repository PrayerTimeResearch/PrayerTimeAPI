{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { MatTable } from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild(MatTable) table: MatTable<any>;\n  title = 'moonApi';\n  myDataArray;\n  columnsToDisplay;\n  date = new Date();\n  year = this.date.getFullYear();\n  tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  lat = 21.42664; // default to Makkah\n  lng = 39.82563; // default to Makkah\n  method = \"0\";\n  both = false;\n  format = \"0\"\n  constructor(\n    private http:HttpClient\n    ){}\n\n  ngOnInit(){\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position=>{\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    } \n    this.make(false);\n  }\n\n  make(rerender){\n    let url_prefix = \"https://moonsighting.ahmedbukhamsin.sa/time_json.php?\";\n    let url_params = `year=${this.year}&tz=${this.tz}&lat=${this.lat}&lon=${this.lng}&method=${this.method}&both=${this.both}&time=${this.format}`;\n    console.log(`URL: ${url_prefix + url_params}`);\n    this.http.get(url_prefix + url_params).subscribe(data=> {\n      console.log(data);\n      this.myDataArray = [(<any>data).times];\n      let query = (<any>data).query;\n      console.log(`both ${query.both}`);\n      if(query.both == \"true\" && query.method < 3){\n        this.columnsToDisplay = ['day','fajr','sunrise','dhuhr','asr_s','asr_h','maghrib','isha'];\n      }else{\n        this.columnsToDisplay = ['day','fajr','sunrise','dhuhr','asr','maghrib','isha'];\n      }\n      if(rerender)\n        this.table.renderRows();\n    });\n  }\n\n  onToggle(){\n    this.both =!this.both;\n  }\n\n  onChange(){\n    this.make(true);\n  }\n\n\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Year</mat-label>\n    <input matInput [(ngModel)]=\"year\" placeholder=\"Year\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Timezone</mat-label>\n  <input matInput [(ngModel)]=\"tz\" placeholder=\"Timezone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Latitude</mat-label>\n  <input matInput [(ngModel)]=\"lat\" placeholder=\"Timezone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Longitude</mat-label>\n  <input matInput [(ngModel)]=\"lng\" placeholder=\"Timezone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Method</mat-label>\n  <mat-select [(value)]=\"method\">\n    <mat-option value=\"0\">Hanafi (Shafaq General)</mat-option>\n    <mat-option value=\"1\">Hanafi (Shafaq Abyad)</mat-option>\n    <mat-option value=\"2\">Shafi'im Maliki, Hanbali</mat-option>\n    <mat-option value=\"3\">Jafari (Ithna Ashari)</mat-option>\n  </mat-select>  \n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Time format</mat-label>\n  <mat-select [(value)]=\"format\">\n    <mat-option value=\"0\">24 hours</mat-option>\n    <mat-option value=\"1\">12 hours</mat-option>\n  </mat-select>  \n</mat-form-field>\n<section class=\"example-section\">\n  <mat-slide-toggle [checked]=\"both\" (change)=\"onToggle()\" >\n    Print both Asr methods\n  </mat-slide-toggle>\n  <button mat-raised-button style=\"left: 10px\" (click)=\"make(true)\">Make Timetable</button>\n</section>\n<table mat-table [dataSource]=\"myDataArray\">\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"day\">\n    <th mat-header-cell *matHeaderCellDef> Day </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.day}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"fajr\">\n    <th mat-header-cell *matHeaderCellDef> Fajr </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.fajr}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"sunrise\">\n    <th mat-header-cell *matHeaderCellDef> Sunrise </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.sunrise}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"dhuhr\">\n    <th mat-header-cell *matHeaderCellDef> Dhuhr </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.dhuhr}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"asr_s\">\n    <th mat-header-cell *matHeaderCellDef> Asr(s) </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.asr_s}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"asr_h\">\n    <th mat-header-cell *matHeaderCellDef> Asr(h) </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.asr_h}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"asr\">\n    <th mat-header-cell *matHeaderCellDef> Asr </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.asr}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"maghrib\">\n    <th mat-header-cell *matHeaderCellDef> Maghrib </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.maghrib}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"isha\">\n    <th mat-header-cell *matHeaderCellDef> Isha </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.isha}} </td>\n  </ng-container>\n</table>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table'  \nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatSliderModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatSelectModule,\n    MatTableModule,\n    NoopAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}