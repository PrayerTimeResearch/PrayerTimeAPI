{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","http","title","date","Date","year","getFullYear","tz","Intl","DateTimeFormat","resolvedOptions","timeZone","lat","lng","method","both","format","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","make","rerender","url_prefix","url_params","console","log","get","subscribe","data","myDataArray","times","query","columnsToDisplay","table","renderRows","onToggle","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, ViewChild } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { MatTable } from '@angular/material/table';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  @ViewChild(MatTable) table: MatTable<any>;\n  title = 'moonApi';\n  myDataArray;\n  columnsToDisplay;\n  date = new Date();\n  year = this.date.getFullYear();\n  tz = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  lat = 21.42664; // default to Makkah\n  lng = 39.82563; // default to Makkah\n  method = \"0\";\n  both = false;\n  format = \"0\"\n  constructor(\n    private http:HttpClient\n    ){}\n\n  ngOnInit(){\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position=>{\n        this.lat = position.coords.latitude;\n        this.lng = position.coords.longitude;\n      });\n    } \n    this.make(false);\n  }\n\n  make(rerender){\n    let url_prefix = \"https://moonsighting.ahmedbukhamsin.sa/time_json.php?\";\n    let url_params = `year=${this.year}&tz=${this.tz}&lat=${this.lat}&lon=${this.lng}&method=${this.method}&both=${this.both}&time=${this.format}`;\n    console.log(`URL: ${url_prefix + url_params}`);\n    this.http.get(url_prefix + url_params).subscribe(data=> {\n      console.log(data);\n      this.myDataArray = [(<any>data).times];\n      let query = (<any>data).query;\n      console.log(`both ${query.both}`);\n      if(query.both == \"true\" && query.method < 3){\n        this.columnsToDisplay = ['day','fajr','sunrise','dhuhr','asr_s','asr_h','maghrib','isha'];\n      }else{\n        this.columnsToDisplay = ['day','fajr','sunrise','dhuhr','asr','maghrib','isha'];\n      }\n      if(rerender)\n        this.table.renderRows();\n    });\n  }\n\n  onToggle(){\n    this.both =!this.both;\n  }\n\n  onChange(){\n    this.make(true);\n  }\n\n\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Year</mat-label>\n    <input matInput [(ngModel)]=\"year\" placeholder=\"Year\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Timezone</mat-label>\n  <input matInput [(ngModel)]=\"tz\" placeholder=\"Timezone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Latitude</mat-label>\n  <input matInput [(ngModel)]=\"lat\" placeholder=\"Timezone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Longitude</mat-label>\n  <input matInput [(ngModel)]=\"lng\" placeholder=\"Timezone\">\n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Method</mat-label>\n  <mat-select [(value)]=\"method\">\n    <mat-option value=\"0\">Hanafi (Shafaq General)</mat-option>\n    <mat-option value=\"1\">Hanafi (Shafaq Abyad)</mat-option>\n    <mat-option value=\"2\">Shafi'im Maliki, Hanbali</mat-option>\n    <mat-option value=\"3\">Jafari (Ithna Ashari)</mat-option>\n  </mat-select>  \n</mat-form-field>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Time format</mat-label>\n  <mat-select [(value)]=\"format\">\n    <mat-option value=\"0\">24 hours</mat-option>\n    <mat-option value=\"1\">12 hours</mat-option>\n  </mat-select>  \n</mat-form-field>\n<section class=\"example-section\">\n  <mat-slide-toggle [checked]=\"both\" (change)=\"onToggle()\" >\n    Print both Asr methods\n  </mat-slide-toggle>\n  <button mat-raised-button style=\"left: 10px\" (click)=\"make(true)\">Make Timetable</button>\n</section>\n<table mat-table [dataSource]=\"myDataArray\">\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let myRowData; columns: columnsToDisplay\"></tr>\n  <ng-container matColumnDef=\"day\">\n    <th mat-header-cell *matHeaderCellDef> Day </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.day}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"fajr\">\n    <th mat-header-cell *matHeaderCellDef> Fajr </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.fajr}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"sunrise\">\n    <th mat-header-cell *matHeaderCellDef> Sunrise </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.sunrise}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"dhuhr\">\n    <th mat-header-cell *matHeaderCellDef> Dhuhr </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.dhuhr}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"asr_s\">\n    <th mat-header-cell *matHeaderCellDef> Asr(s) </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.asr_s}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"asr_h\">\n    <th mat-header-cell *matHeaderCellDef> Asr(h) </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.asr_h}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"asr\">\n    <th mat-header-cell *matHeaderCellDef> Asr </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.asr}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"maghrib\">\n    <th mat-header-cell *matHeaderCellDef> Maghrib </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.maghrib}} </td>\n  </ng-container>\n  <ng-container matColumnDef=\"isha\">\n    <th mat-header-cell *matHeaderCellDef> Isha </th>\n    <td mat-cell *matCellDef=\"let times\"> {{times.times.isha}} </td>\n  </ng-container>\n</table>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table'  \nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { FormsModule } from '@angular/forms';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatSliderModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatSelectModule,\n    MatTableModule,\n    NoopAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}